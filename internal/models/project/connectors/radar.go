// Code generated by terragen. DO NOT EDIT.

package connectors

import (
	"github.com/descope/terraform-provider-descope/internal/models/attrs/floatattr"
	"github.com/descope/terraform-provider-descope/internal/models/attrs/stringattr"
	"github.com/descope/terraform-provider-descope/internal/models/helpers"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

var RadarAttributes = map[string]schema.Attribute{
	"id":          stringattr.IdentifierMatched(),
	"name":        stringattr.Required(stringattr.StandardLenValidator),
	"description": stringattr.Default(""),

	"public_api_key": stringattr.Required(),
	"address_types":  stringattr.Default(""),
	"language":       stringattr.Default(""),
	"region":         stringattr.Default(""),
	"limit":          floatattr.Default(5),
}

// Model

type RadarModel struct {
	ID          stringattr.Type `tfsdk:"id"`
	Name        stringattr.Type `tfsdk:"name"`
	Description stringattr.Type `tfsdk:"description"`

	PublicAPIKey stringattr.Type `tfsdk:"public_api_key"`
	AddressTypes stringattr.Type `tfsdk:"address_types"`
	Language     stringattr.Type `tfsdk:"language"`
	Region       stringattr.Type `tfsdk:"region"`
	Limit        floatattr.Type  `tfsdk:"limit"`
}

func (m *RadarModel) Values(h *helpers.Handler) map[string]any {
	data := connectorValues(m.ID, m.Name, m.Description, h)
	data["type"] = "radar"
	data["configuration"] = m.ConfigurationValues(h)
	return data
}

func (m *RadarModel) SetValues(h *helpers.Handler, data map[string]any) {
	setConnectorValues(&m.ID, &m.Name, &m.Description, data, h)
	if c, ok := data["configuration"].(map[string]any); ok {
		m.SetConfigurationValues(c, h)
	}
}

// Configuration

func (m *RadarModel) ConfigurationValues(h *helpers.Handler) map[string]any {
	c := map[string]any{}
	stringattr.Get(m.PublicAPIKey, c, "publicApiKey")
	stringattr.Get(m.AddressTypes, c, "addressTypes")
	stringattr.Get(m.Language, c, "language")
	stringattr.Get(m.Region, c, "region")
	floatattr.Get(m.Limit, c, "limit")
	return c
}

func (m *RadarModel) SetConfigurationValues(c map[string]any, h *helpers.Handler) {
	stringattr.Set(&m.PublicAPIKey, c, "publicApiKey")
	stringattr.Set(&m.AddressTypes, c, "addressTypes")
	stringattr.Set(&m.Language, c, "language")
	stringattr.Set(&m.Region, c, "region")
	floatattr.Set(&m.Limit, c, "limit")
}

// Matching

func (m *RadarModel) GetName() stringattr.Type {
	return m.Name
}

func (m *RadarModel) GetID() stringattr.Type {
	return m.ID
}

func (m *RadarModel) SetID(id stringattr.Type) {
	m.ID = id
}
