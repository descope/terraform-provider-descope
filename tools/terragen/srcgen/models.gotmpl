// Code generated by terragen. DO NOT EDIT.

package docs

import (
	"fmt"

	"github.com/descope/terraform-provider-descope/internal/models"
{{- range .Packages }}
	"github.com/descope/terraform-provider-descope/internal/models/{{.}}"
{{- end }}
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func InjectModels() {
{{- range .Files }}
{{- range .Models }}
	inject({{.Package}}.{{.Name}}Attributes, docs{{.Name}})
{{- end }}
{{- end }}
}

func inject(model map[string]schema.Attribute, docs map[string]string) {
	for field, desc := range docs {
		switch attr := model[field].(type) {
		case schema.StringAttribute:
			attr.MarkdownDescription = desc
			model[field] = attr
		case schema.BoolAttribute:
			attr.MarkdownDescription = desc
			model[field] = attr
		case schema.Int64Attribute:
			attr.MarkdownDescription = desc
			model[field] = attr
		case schema.Float64Attribute:
			attr.MarkdownDescription = desc
			model[field] = attr
		case schema.MapAttribute:
			attr.MarkdownDescription = desc
			model[field] = attr
		case schema.ListAttribute:
			attr.MarkdownDescription = desc
			model[field] = attr
		case schema.MapNestedAttribute:
			attr.MarkdownDescription = desc
			model[field] = attr
		case schema.SingleNestedAttribute:
			attr.MarkdownDescription = desc
			model[field] = attr
		case schema.ListNestedAttribute:
			attr.MarkdownDescription = desc
			model[field] = attr
		default:
			panic(fmt.Sprintf("unexpected schema type for documentation key %s: %T", field, attr))
		}
	}
}
